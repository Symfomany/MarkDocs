{"version":3,"sources":["node_modules/browser-pack/_prelude.js","lib/app.ts"],"names":[],"mappings":"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","file":"app.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import {Option} from './option';\n\n/**\n * @class Markdocs\n * @version 1.0\n * TODO: importer underscore\n * TODO: convertToObject return void ?\n * TODO: user superagent\n * TODO: user Promises\n * TODO: use multi assignements\n * TODO\n */\nclass Markdocs {\n\n\n    /**\n     * Object Showdown\n     */\n    public showdown: any;\n\n\n    /**\n     * All default options\n     */\n    public options: Option = {\n        mdFiles: undefined,\n        showdownOptions: {\n            tables: true\n        },\n        genericNames: {\n            container_docBody: 'markdocs-render',\n            container_docNav: 'markdocs-nav',\n            container_navGenerated: 'markdocs-nav-generated',\n            container_filesNav: 'markdocs-nav-files',\n            container_loadRender: 'markdocs-renderLoad',\n            data_btnFilesNav: 'file-name'\n        }\n    };\n\n    /**\n     * [constructor description]\n     */\n    public constructor(showdown:any, options?: Option) {\n\n      console.log('okkk');\n      if( typeof options.mdFiles === 'undefined' || !Array.isArray(options.mdFiles))\n        throw new Error(`mdFiles doit être un tableau...`);\n\n      this.showdown = showdown;\n      this.options = options;\n      this.loadPage(this.options.mdFiles, this.options.mdFiles[0]);\n    }\n\n    /**\n     * Merge all option with default params\n     */\n    public merge(option: Option){}\n\n\n    /**\n     * Loading page\n     * @param  {Array<string>} arrayFiles [description]\n     * @param  {[type]} filePage   [description]\n     * @return {[type]}            [description]\n     */\n    public loadPage(arrayFiles: Array<string>, filePage: string){\n\n      // -**- Lit le fichier md, le converti en html et envoie son contenu à la vue\n      this.readMdFile(filePage, data => {\n\n          this.sendHtml(this.parseMdToHtml(data));\n\n      });\n\n\n    }\n\n\n    /**\n     * Add text to html\n     * @param  {string} txt texte stringify\n     */\n     public sendHtml(txt:string){\n       document.querySelector(`#${this.options.genericNames.container_docBody}`).innerHTML = `<div id=\"${this.options.genericNames.container_loadRender}\">${txt}</div>`\n     }\n\n\n     /**\n      * Convert to html\n      * @param  {[md]} md Mardown\n      */\n     public parseMdToHtml(md:any){\n\n       for (let opp in this.options.showdownOptions){\n           this.showdown.setOption(opp, this.options.showdownOptions[opp]);\n       }\n       return this.showdown.makeHtml(md);\n     }\n\n     /**\n      * Remove extention from file\n      * @param  {string} file [description]\n      */\n     public static rmExtension(file: string){\n\n       return file.trim().replace(/\\..+$/, '');\n     }\n\n     /**\n      * [convertToObject description]\n      * @param  {Array<string>} arry [description]\n      * @param  {[type]}        obj   [description]\n      */\n     public static convertToObject(array: Array<string>, obj){\n        for(let i=0; array.length > i; i++){\n            obj[i] = {};\n            obj[i].name = Markdocs.rmExtension(array[i]);\n            obj[i].path = array[i];\n        }\n     }\n\n\n     readMdFile (urlFile: string, action: any):any{\n\n       let reader = new XMLHttpRequest();\n\n       reader.onload = function(){\n           let data = this.responseText;\n\n           if(typeof action === 'function') {\n               action(data);\n           }\n       };\n\n       reader.open(\"GET\", urlFile + ((/\\?/).test(urlFile) ? \"&\" : \"?\") + (new Date()).getTime(), true);\n\n       reader.overrideMimeType(\"text/markdown; charset=UTF-8\");\n       reader.setRequestHeader(\"Cache-Control\", \"no-cache\");\n\n       if(reader.status == 0 || reader.status == 200) {\n           return reader.send();\n       }else{\n           throw new Error('Il y a eu une erreur lors du chargement du fichier...');\n       }\n\n     }\n\n\n};\n\n\n\nvar user = new Markdocs(\n  null,\n  {\n      mdFiles: [\n          'md/doc_markdocs.v1.md',\n          'md/samples.md'\n      ],\n  }\n);\ndocument.body.innerHTML =  `<h3>Hye ${user}</h3>`;\n"]}